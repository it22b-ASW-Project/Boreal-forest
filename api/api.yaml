openapi: 3.0.2
info:
  version: 1.0.0
  title: Issue Tracker API
  description: API para la gestión de issues. Permite crear y administrar issues.
servers:
  - url: 'https://boreal-forest.onrender.com/'
paths:
  /auth/login:
    post:
      tags:
        - auth
      summary: Autenticación de usuario y obtención de token
      operationId: login
      requestBody:
        description: Proporciona las credenciales del usuario (nombre de usuario y contraseña)
        content:
          application/json:
            schema:
              required:
                - username
                - password
              type: object
              properties:
                username:
                  type: string
                  example: 'usuario_prueba'
                password:
                  type: string
                  example: 'contraseña_segura'
        required: true
      responses:
        200:
          description: Token generado exitosamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
                    example: 'valid_token_example_12345'
        401:
          description: 'Error: Credenciales inválidas'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResult'
              examples:
                errorExample:
                  value:
                    message: 'Credenciales inválidas.'
paths:
  /issues/new:
    post:
      tags:
        - issues
      summary: Agrega un nuevo issue
      operationId: addIssue
      requestBody:
        description: Proporciona el título y la descripción del nuevo issue
        content:
          application/json:
            schema:
              required:
                - title
                - description
                - status
                - type
                - severity
                - priority
              type: object
              properties:
                title:
                  type: string
                  minLength: 1
                  example: 'Error en la aplicación'
                description:
                  type: string
                  minLength: 1
                  example: 'Descripción del error que ocurre al iniciar la app.'
                status:
                  type: string
                  enum:
                    - New
                    - In progress
                    - Ready for test
                    - Closed
                    - Needs info
                    - Rejected
                    - Postponed
                  default: New
                  description: Estado del issue (por defecto "New")
                type:
                  type: string
                  enum:
                    - Bug
                    - Question
                    - Enhancement
                  default: Bug
                  description: Tipo de issue (por defecto "Bug")
                severity:
                  type: string
                  enum:
                    - Whishlist
                    - Minor
                    - Normal
                    - Important
                    - Critical
                  default: Wishlist
                  description: Severidad del issue (por defecto "Wishlist")
                priority:
                  type: string
                  enum:
                    - Low
                    - Normal
                    - High
                  default: Low
                  description: Prioridad del issue (por defecto "Low")
        required: true
      responses:
        201:
          description: Issue creado exitosamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  title:
                    type: string
                  description:
                    type: string
                  status:
                    type: string
                  type:
                    type: string
                  severity:
                    type: string
                  priority:
                    type: string
                  created_at:
                    type: string
                    format: date-time
        400:
          description: 'Error: Solicitud incorrecta'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResult'
              examples:
                errorExample:
                  value:
                    message: 'El título o la descripción no pueden estar vacíos.'
        401:
          description: 'Error: No autorizado'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResult'
              examples:
                errorExample:
                  value:
                    message: 'Se requiere un token de autenticación.'
components:
  schemas:
    ErrorResult:
      type: object
      properties:
        message: 
          type: string
          example: 'El título o la descripción no pueden estar vacíos.'
      required:
        - message
  securitySchemes:
    ApiKeyAuth:
      type: apiKey
      name: Authorization
      in: header  # El token se espera en la cabecera 'Authorization'
